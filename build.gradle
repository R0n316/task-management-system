plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'ru.alex'
version = '0.0.1-SNAPSHOT'

apply from: 'version.gradle'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom annotationProcessor, implementation, compilyOnly, runtimeOnly
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    testImplementation 'org.springframework.security:spring-security-test'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation "com.auth0:java-jwt:${versions.jwt}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.openapi}"

    implementation "com.querydsl:querydsl-jpa:${versions.querydsl}:jakarta"
    implementation "com.querydsl:querydsl-core:${versions.querydsl}"
}

querydsl {
    jpa = true
    library = "com.querydsl:querydsl-apt:${versions.querydsl}:jakarta"
    querydslSourcesDir = layout.buildDirectory.dir("generated/sources/annotationProcessor/java/main").get().asFile
}
initQuerydslSourcesDir.dependsOn clean

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

tasks.named('test') {
    useJUnitPlatform()
}
